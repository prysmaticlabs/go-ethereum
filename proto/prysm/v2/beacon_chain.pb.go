// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.8
// source: proto/prysm/v2/beacon_chain.proto

package v2

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	v1alpha1 "github.com/prysmaticlabs/prysm/proto/eth/v1alpha1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ListBlocksResponseAltair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockContainers []*BeaconBlockContainerAltair `protobuf:"bytes,1,rep,name=blockContainers,proto3" json:"blockContainers,omitempty"`
	NextPageToken   string                        `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalSize       int32                         `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
}

func (x *ListBlocksResponseAltair) Reset() {
	*x = ListBlocksResponseAltair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_prysm_v2_beacon_chain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBlocksResponseAltair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBlocksResponseAltair) ProtoMessage() {}

func (x *ListBlocksResponseAltair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_prysm_v2_beacon_chain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBlocksResponseAltair.ProtoReflect.Descriptor instead.
func (*ListBlocksResponseAltair) Descriptor() ([]byte, []int) {
	return file_proto_prysm_v2_beacon_chain_proto_rawDescGZIP(), []int{0}
}

func (x *ListBlocksResponseAltair) GetBlockContainers() []*BeaconBlockContainerAltair {
	if x != nil {
		return x.BlockContainers
	}
	return nil
}

func (x *ListBlocksResponseAltair) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListBlocksResponseAltair) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

type BeaconBlockContainerAltair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockRoot []byte `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`
	Canonical bool   `protobuf:"varint,2,opt,name=canonical,proto3" json:"canonical,omitempty"`
	// Types that are assignable to Block:
	//	*BeaconBlockContainerAltair_Phase0Block
	//	*BeaconBlockContainerAltair_AltairBlock
	Block isBeaconBlockContainerAltair_Block `protobuf_oneof:"block"`
}

func (x *BeaconBlockContainerAltair) Reset() {
	*x = BeaconBlockContainerAltair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_prysm_v2_beacon_chain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconBlockContainerAltair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconBlockContainerAltair) ProtoMessage() {}

func (x *BeaconBlockContainerAltair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_prysm_v2_beacon_chain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconBlockContainerAltair.ProtoReflect.Descriptor instead.
func (*BeaconBlockContainerAltair) Descriptor() ([]byte, []int) {
	return file_proto_prysm_v2_beacon_chain_proto_rawDescGZIP(), []int{1}
}

func (x *BeaconBlockContainerAltair) GetBlockRoot() []byte {
	if x != nil {
		return x.BlockRoot
	}
	return nil
}

func (x *BeaconBlockContainerAltair) GetCanonical() bool {
	if x != nil {
		return x.Canonical
	}
	return false
}

func (m *BeaconBlockContainerAltair) GetBlock() isBeaconBlockContainerAltair_Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func (x *BeaconBlockContainerAltair) GetPhase0Block() *v1alpha1.SignedBeaconBlock {
	if x, ok := x.GetBlock().(*BeaconBlockContainerAltair_Phase0Block); ok {
		return x.Phase0Block
	}
	return nil
}

func (x *BeaconBlockContainerAltair) GetAltairBlock() *SignedBeaconBlockAltair {
	if x, ok := x.GetBlock().(*BeaconBlockContainerAltair_AltairBlock); ok {
		return x.AltairBlock
	}
	return nil
}

type isBeaconBlockContainerAltair_Block interface {
	isBeaconBlockContainerAltair_Block()
}

type BeaconBlockContainerAltair_Phase0Block struct {
	Phase0Block *v1alpha1.SignedBeaconBlock `protobuf:"bytes,3,opt,name=phase0_block,json=phase0Block,proto3,oneof"`
}

type BeaconBlockContainerAltair_AltairBlock struct {
	AltairBlock *SignedBeaconBlockAltair `protobuf:"bytes,4,opt,name=altair_block,json=altairBlock,proto3,oneof"`
}

func (*BeaconBlockContainerAltair_Phase0Block) isBeaconBlockContainerAltair_Block() {}

func (*BeaconBlockContainerAltair_AltairBlock) isBeaconBlockContainerAltair_Block() {}

var File_proto_prysm_v2_beacon_chain_proto protoreflect.FileDescriptor

var file_proto_prysm_v2_beacon_chain_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x2f, 0x76, 0x32,
	0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x70, 0x72,
	0x79, 0x73, 0x6d, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x74, 0x68, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x65, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x2f,
	0x76, 0x32, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c, 0x74, 0x61,
	0x69, 0x72, 0x12, 0x57, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x2e, 0x76, 0x32, 0x2e,
	0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x41, 0x6c, 0x74, 0x61, 0x69, 0x72, 0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x82, 0x02, 0x0a, 0x1a, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x6c, 0x74, 0x61, 0x69,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x6f, 0x6e, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x4d,
	0x0a, 0x0c, 0x70, 0x68, 0x61, 0x73, 0x65, 0x30, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e,
	0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00,
	0x52, 0x0b, 0x70, 0x68, 0x61, 0x73, 0x65, 0x30, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x4f, 0x0a,
	0x0c, 0x61, 0x6c, 0x74, 0x61, 0x69, 0x72, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x70,
	0x72, 0x79, 0x73, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x42, 0x65,
	0x61, 0x63, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x6c, 0x74, 0x61, 0x69, 0x72, 0x48,
	0x00, 0x52, 0x0b, 0x61, 0x6c, 0x74, 0x61, 0x69, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x07,
	0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x32, 0x9a, 0x01, 0x0a, 0x11, 0x42, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x41, 0x6c, 0x74, 0x61, 0x69, 0x72, 0x12, 0x84, 0x01,
	0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x28, 0x2e, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x65, 0x74, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75,
	0x6d, 0x2e, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x6c, 0x74,
	0x61, 0x69, 0x72, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x70, 0x72,
	0x79, 0x73, 0x6d, 0x2f, 0x76, 0x32, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x42, 0x87, 0x01, 0x0a, 0x15, 0x6f, 0x72, 0x67, 0x2e, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x2e, 0x76, 0x32, 0x42, 0x12,
	0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x41, 0x6c, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x70,
	0x72, 0x79, 0x73, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x79, 0x73, 0x6d,
	0x2f, 0x76, 0x32, 0x3b, 0x76, 0x32, 0xaa, 0x02, 0x11, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75,
	0x6d, 0x2e, 0x50, 0x72, 0x79, 0x73, 0x6d, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x11, 0x45, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x5c, 0x50, 0x72, 0x79, 0x73, 0x6d, 0x5c, 0x76, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_prysm_v2_beacon_chain_proto_rawDescOnce sync.Once
	file_proto_prysm_v2_beacon_chain_proto_rawDescData = file_proto_prysm_v2_beacon_chain_proto_rawDesc
)

func file_proto_prysm_v2_beacon_chain_proto_rawDescGZIP() []byte {
	file_proto_prysm_v2_beacon_chain_proto_rawDescOnce.Do(func() {
		file_proto_prysm_v2_beacon_chain_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_prysm_v2_beacon_chain_proto_rawDescData)
	})
	return file_proto_prysm_v2_beacon_chain_proto_rawDescData
}

var file_proto_prysm_v2_beacon_chain_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_prysm_v2_beacon_chain_proto_goTypes = []interface{}{
	(*ListBlocksResponseAltair)(nil),   // 0: ethereum.prysm.v2.ListBlocksResponseAltair
	(*BeaconBlockContainerAltair)(nil), // 1: ethereum.prysm.v2.BeaconBlockContainerAltair
	(*v1alpha1.SignedBeaconBlock)(nil), // 2: ethereum.eth.v1alpha1.SignedBeaconBlock
	(*SignedBeaconBlockAltair)(nil),    // 3: ethereum.prysm.v2.SignedBeaconBlockAltair
	(*v1alpha1.ListBlocksRequest)(nil), // 4: ethereum.eth.v1alpha1.ListBlocksRequest
}
var file_proto_prysm_v2_beacon_chain_proto_depIdxs = []int32{
	1, // 0: ethereum.prysm.v2.ListBlocksResponseAltair.blockContainers:type_name -> ethereum.prysm.v2.BeaconBlockContainerAltair
	2, // 1: ethereum.prysm.v2.BeaconBlockContainerAltair.phase0_block:type_name -> ethereum.eth.v1alpha1.SignedBeaconBlock
	3, // 2: ethereum.prysm.v2.BeaconBlockContainerAltair.altair_block:type_name -> ethereum.prysm.v2.SignedBeaconBlockAltair
	4, // 3: ethereum.prysm.v2.BeaconChainAltair.ListBlocks:input_type -> ethereum.eth.v1alpha1.ListBlocksRequest
	0, // 4: ethereum.prysm.v2.BeaconChainAltair.ListBlocks:output_type -> ethereum.prysm.v2.ListBlocksResponseAltair
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_prysm_v2_beacon_chain_proto_init() }
func file_proto_prysm_v2_beacon_chain_proto_init() {
	if File_proto_prysm_v2_beacon_chain_proto != nil {
		return
	}
	file_proto_prysm_v2_beacon_block_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_prysm_v2_beacon_chain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBlocksResponseAltair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_prysm_v2_beacon_chain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconBlockContainerAltair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_prysm_v2_beacon_chain_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*BeaconBlockContainerAltair_Phase0Block)(nil),
		(*BeaconBlockContainerAltair_AltairBlock)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_prysm_v2_beacon_chain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_prysm_v2_beacon_chain_proto_goTypes,
		DependencyIndexes: file_proto_prysm_v2_beacon_chain_proto_depIdxs,
		MessageInfos:      file_proto_prysm_v2_beacon_chain_proto_msgTypes,
	}.Build()
	File_proto_prysm_v2_beacon_chain_proto = out.File
	file_proto_prysm_v2_beacon_chain_proto_rawDesc = nil
	file_proto_prysm_v2_beacon_chain_proto_goTypes = nil
	file_proto_prysm_v2_beacon_chain_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BeaconChainAltairClient is the client API for BeaconChainAltair service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BeaconChainAltairClient interface {
	ListBlocks(ctx context.Context, in *v1alpha1.ListBlocksRequest, opts ...grpc.CallOption) (*ListBlocksResponseAltair, error)
}

type beaconChainAltairClient struct {
	cc grpc.ClientConnInterface
}

func NewBeaconChainAltairClient(cc grpc.ClientConnInterface) BeaconChainAltairClient {
	return &beaconChainAltairClient{cc}
}

func (c *beaconChainAltairClient) ListBlocks(ctx context.Context, in *v1alpha1.ListBlocksRequest, opts ...grpc.CallOption) (*ListBlocksResponseAltair, error) {
	out := new(ListBlocksResponseAltair)
	err := c.cc.Invoke(ctx, "/ethereum.prysm.v2.BeaconChainAltair/ListBlocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BeaconChainAltairServer is the server API for BeaconChainAltair service.
type BeaconChainAltairServer interface {
	ListBlocks(context.Context, *v1alpha1.ListBlocksRequest) (*ListBlocksResponseAltair, error)
}

// UnimplementedBeaconChainAltairServer can be embedded to have forward compatible implementations.
type UnimplementedBeaconChainAltairServer struct {
}

func (*UnimplementedBeaconChainAltairServer) ListBlocks(context.Context, *v1alpha1.ListBlocksRequest) (*ListBlocksResponseAltair, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBlocks not implemented")
}

func RegisterBeaconChainAltairServer(s *grpc.Server, srv BeaconChainAltairServer) {
	s.RegisterService(&_BeaconChainAltair_serviceDesc, srv)
}

func _BeaconChainAltair_ListBlocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.ListBlocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconChainAltairServer).ListBlocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.prysm.v2.BeaconChainAltair/ListBlocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconChainAltairServer).ListBlocks(ctx, req.(*v1alpha1.ListBlocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BeaconChainAltair_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.prysm.v2.BeaconChainAltair",
	HandlerType: (*BeaconChainAltairServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListBlocks",
			Handler:    _BeaconChainAltair_ListBlocks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/prysm/v2/beacon_chain.proto",
}
